// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookshelf_api.Models;

namespace bookshelf_api.Migrations
{
    [DbContext(typeof(BookshelfContext))]
    [Migration("20191202011301_Initilization")]
    partial class Initilization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1");

            modelBuilder.Entity("bookshelf_api.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoanedToId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("LoanedToId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein",
                            ISBN = "978-0262033848",
                            Title = "Introduction to Algorithms"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Jane Austen",
                            ISBN = "9780141439518",
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Maxim Gorky",
                            ISBN = "978-1598955094",
                            Title = "The Mother v2"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Maxim Gorky",
                            ISBN = "978-1544955094",
                            Title = "The Mother"
                        });
                });

            modelBuilder.Entity("bookshelf_api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "Channa",
                            UserName = "channa@gmail.com"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "Lasith",
                            UserName = "lasitha@gmail.com"
                        },
                        new
                        {
                            UserId = 3,
                            Name = "Dilshan",
                            UserName = "dilshan@gmail.com"
                        });
                });

            modelBuilder.Entity("bookshelf_api.Models.Book", b =>
                {
                    b.HasOne("bookshelf_api.Models.User", "LoanedTo")
                        .WithMany("Books")
                        .HasForeignKey("LoanedToId");
                });
#pragma warning restore 612, 618
        }
    }
}
